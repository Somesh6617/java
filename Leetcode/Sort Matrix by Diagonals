import java.util.*;

class Solution {
    public int[][] sortMatrix(int[][] grid) {
        int n = grid.length;
        for (int j = 0; j < n; j++) {
            handleDiagonal(grid, 0, j);
        }
        for (int i = 1; i < n; i++) {
            handleDiagonal(grid, i, 0);
        }

        return grid;
    }
    private void handleDiagonal(int[][] grid, int i, int j) {
        int n = grid.length;
        int len = Math.min(n - i, n - j);
        int[] ar = new int[len];
        int r = i, c = j, a = 0;
        while (r < n && c < n) {
            ar[a++] = grid[r][c];
            r++;
            c++;
        }
        Arrays.sort(ar);
        if (i >= j) {
            for (int x = 0; x < len / 2; x++) {
                int temp = ar[x];
                ar[x] = ar[len - 1 - x];
                ar[len - 1 - x] = temp;
            }
        }
        r = i; c = j; a = 0;
        while (r < n && c < n) {
            grid[r][c] = ar[a++];
            r++;
            c++;
        }
    }
}
